A Java program to do the below mentioned list operations:
  ->Insertion at Beginning
  ->Insertion at Position
  ->Insertion at End
  ->Deletion at Beginning
  ->Deletion at Position
  ->Deletion at End
  ->Deletion a Data
  ->Sum of elements
  ->Count of nodes
  ->Display datas
  ->Searching a element
  


import java.util.*;
class Node{
    int data;
    Node next; 
    Node(int data){
        this.data=data;
    }
}
class List{
    Node head,tail;
    public void display(){//Display
        if(head==null){
            System.out.println("Empty");
            return;
        }
        Node temp=head;
        System.out.println("Data:");
        while(temp!=null){
            System.out.print(temp.data+" ");
            temp=temp.next;
        }
        System.out.println();
    }
    public void insertEnd(int data){//Insertion at end
        Node n=new Node(data);
        if(head==null){
            head=n;
            tail=n;
        }
        else{
            tail.next=n;
            tail=n;
        }
    }
    public void insertBeg(int data){//Insertion at beginning
        Node n=new Node(data);
        n.next=head;
        head=n;
    }
    public void insertPos(int data,int pos){//Insertion at Position
        Node n=new Node(data);
        Node temp=head;
        for(int i=1;i<pos-1;i++){
            temp=temp.next;
        }
        n.next=temp.next;
        temp.next=n;
    }
    public void deleteEnd(){//Deletion at end
        Node temp=head;
        while(temp.next.next!=null){
            temp=temp.next;
        }
        temp.next=null;
    }
    public void deleteBeg(){//Deletion at Beginning
        head=head.next;
    }
    public void deletePos(int pos){//Deletion at position
        Node temp=head;
        for(int i=1;i<pos-1;i++){
            temp=temp.next;
        }
        temp.next=temp.next.next;
    }
    public void deleteData(int data){//Deleting a data
        Node temp=head;
        while(temp.next.data!=data){
            temp=temp.next;
        }
        temp.next=temp.next.next;
    }
    public void search(int data){//Searching data
        Node temp=head;
        int c=0;
        while(temp!=null){
            c++;
            if(temp.data==data){
                System.out.println("Element is found at "+c);
                return;
            }
            temp=temp.next;
        }
        System.out.println("Element is not found");
    }
    public void count(){//Count of elements
        int c=0;
        if(head==null){
            System.out.println("Count:"+c);
            return;
        }
        Node temp=head;
        while(temp!=null){
            c++;
            temp=temp.next;
        }
        System.out.println("Count:"+c);
    }
    public void sum(){//Sum of elements 
        int s=0;
        if(head==null){
            System.out.println("Sum:"+s);
            return;
        }
        Node temp=head;
        while(temp!=null){
            s+=temp.data;
            temp=temp.next;
        }
        System.out.println("Sum:"+s);
    }
}
public class Main
{
	public static void main(String[] args) {
		List l=new List();
		l.insertEnd(1);
		l.insertBeg(2);
		l.insertEnd(4);
		l.insertPos(3,3);
		l.insertEnd(5);
		l.insertEnd(6);
		l.display();
		System.out.println("Searching 4:");
		l.search(4);
		l.sum();
		l.count();
		l.deleteBeg();
		System.out.println("After deleting at begining:");
		l.display();
		System.out.println("After deleting at End:");
		l.deleteEnd();
		l.display();
		l.deleteData(3);
		System.out.println("After deleting 3:");
		l.display();
		l.deletePos(2);
		System.out.println("After deleting at position 2:");
		l.display();
	}
}
















